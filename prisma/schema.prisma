generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(cuid())
  email            String            @unique
  name             String?
  dailyCalorieGoal Float             @default(1750)
  dailyProteinGoal Float             @default(100)
  createdAt        DateTime          @default(now())
  records          NutritionRecord[]
  weeklyStats      WeeklyStats[]
}

model NutritionRecord {
  id         String   @id @default(cuid())
  name       String
  category   String
  calories   Float
  protein    Float
  sourceType String
  foodId     String?
  amount     Float?
  recordedAt DateTime @default(now())
  userId     String
  food       Food?    @relation(fields: [foodId], references: [id])
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model WeeklyStats {
  id               String   @id @default(cuid())
  weekStartDate    DateTime
  totalCalories    Float
  avgDailyCalories Float
  totalProtein     Float
  avgProtein       Float
  recordsCount     Int
  actualDays       Int
  userId           String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, weekStartDate])
}

model Food {
  id              String            @id @default(cuid())
  name            String
  category        String
  brand           String?
  servingUnit     String?
  servingSize     Float?
  caloriesPer100g Int
  proteinPer100g  Float
  isGlobal        Boolean           @default(true)
  isPublished     Boolean           @default(true)
  createdBy       String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now()) @updatedAt
  records         NutritionRecord[]

  @@unique([name, category, brand])
}
